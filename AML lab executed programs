{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPImXIXBuW5R6SoaW8uPgJx",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/sowmika05/AML-lab/blob/main/AML%20lab%20executed%20programs\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eD2lupfjYFPl",
        "outputId": "802dfe14-ddf9-4f67-95f8-08a9373393e8"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy: 1.0\n"
          ]
        }
      ],
      "source": [
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.datasets import load_iris\n",
        "\n",
        "# Load the iris dataset\n",
        "iris = load_iris()\n",
        "\n",
        "# Split the dataset into training and testing sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(iris.data, iris.target, test_size=0.2,\n",
        "random_state=42)\n",
        "\n",
        "# Create a KNeighborsClassifier object with k=3\n",
        "k = 3\n",
        "knn = KNeighborsClassifier(n_neighbors=k)\n",
        "\n",
        "# Fit the model to the training data\n",
        "knn.fit(X_train, y_train)\n",
        "# Make predictions on the testing data\n",
        "y_pred = knn.predict(X_test)\n",
        "\n",
        "# Calculate accuracy\n",
        "accuracy = accuracy_score(y_test, y_pred)\n",
        "print(\"Accuracy:\", accuracy)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "from sklearn.cluster import KMeans\n",
        "\n",
        "# Given data specifying classifications for nine combinations of VAR1 and VAR2\n",
        "data = np.array([[1.713, 1.586, 0],\n",
        "                 [0.180, 1.786, 1],\n",
        "                 [0.353, 1.240, 1],\n",
        "                 [0.940, 1.566, 0],\n",
        "                 [1.486, 0.759, 1],\n",
        "                 [1.266, 1.106, 0],\n",
        "                 [1.540, 0.419, 1],\n",
        "                 [0.459, 1.799, 1],\n",
        "                 [0.773, 0.186, 1]])\n",
        "\n",
        "# Preprocessing data - not required in this case as data is already given\n",
        "\n",
        "# Perform k-means clustering with 3 means\n",
        "kmeans = KMeans(n_clusters=3, random_state=0)\n",
        "kmeans.fit(data[:, :2])  # Use only the first two columns (VAR1 and VAR2) for clustering\n",
        "\n",
        "# Predict for a new case with VAR1=0.906 and VAR2=0.606\n",
        "new_case = np.array([[0.906, 0.606]])\n",
        "predicted_cluster = kmeans.predict(new_case)\n",
        "\n",
        "# Determine the classification based on the predicted cluster\n",
        "if predicted_cluster == 0:\n",
        "    classification = \"Class 1\"\n",
        "elif predicted_cluster == 1:\n",
        "    classification = \"Class 2\"\n",
        "else:\n",
        "    classification = \"Class 3\"\n",
        "\n",
        "print(\"Predicted classification for VAR1=0.906 and VAR2=0.606: \", classification)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IJNe528BYmIo",
        "outputId": "fd953534-0b70-4f8d-93ed-4206c31dfdea"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Predicted classification for VAR1=0.906 and VAR2=0.606:  Class 1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Generate synthetic data\n",
        "np.random.seed(0)\n",
        "X = np.sort(5 * np.random.rand(80, 1), axis=0)\n",
        "y = np.sin(X).ravel()\n",
        "y += 0.5 * (np.random.rand(80) - 0.5)\n",
        "\n",
        "# LWR algorithm\n",
        "def locally_weighted_regression(X, y, x, tau):\n",
        "    m, n = X.shape\n",
        "    X_ = np.hstack((np.ones((m, 1)), X))  # add bias term\n",
        "    x_ = np.array([[1, x]])\n",
        "\n",
        "    # Calculate weights\n",
        "    weights = np.exp(-np.sum((X_ - x_)**2, axis=1) / (2 * tau**2))\n",
        "    W = np.diag(weights)\n",
        "\n",
        "    # Calculate theta using normal equation\n",
        "    theta = np.linalg.inv(X_.T.dot(W).dot(X_)).dot(X_.T).dot(W).dot(y)\n",
        "\n",
        "    # Predict y_hat\n",
        "    y_hat = x_.dot(theta)\n",
        "    return y_hat\n",
        "\n",
        "# Fit data using LWR\n",
        "tau = 0.3  # bandwidth parameter\n",
        "X_test = np.linspace(0, 5, 100)\n",
        "y_test = []\n",
        "for x in X_test:\n",
        "    y_hat = locally_weighted_regression(X, y, x, tau)\n",
        "    y_test.append(y_hat)\n",
        "\n",
        "# Plot the results\n",
        "plt.scatter(X, y, color='blue', label='Data points')\n",
        "plt.plot(X_test, y_test, color='red', label='LWR')\n",
        "plt.xlabel('X')\n",
        "plt.ylabel('y')\n",
        "plt.title('Locally Weighted Regression')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "J1LuIc7-Y8qq",
        "outputId": "9f88fc20-978a-4305-d46a-33e1caaa4f9c"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}